{"version":3,"file":"static/js/938.ae96a693.chunk.js","mappings":"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","sources":["components/TrendingList/TrendingList.jsx","helpers/API.js","components/MovieSearchBar/MovieSearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Unstable_Grid2';\n\nconst TrendingList = ({ films, location }) => {\n  return (\n    <>\n      <Box sx={{ flexGrow: 1 }}>\n        <Grid container spacing={{ xs: 2, md: 3 }}>\n          {films.map(i => (\n            <Grid key={i.id} lg={3} md={4} sm={6} xs={12}>\n              <Link state={{ from: location }} to={`/movies/${i.id}`}>\n                <Card sx={{ maxWidth: 365 }}>\n                  <CardActionArea>\n                    <CardMedia\n                      component=\"img\"\n                      height=\"450\"\n                      image={`https://image.tmdb.org/t/p/w200/${i.poster_path}`}\n                      alt={i.title}\n                    />\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        {i.title}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {i.overview}\n                      </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </Link>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    </>\n  );\n};\n\nexport default TrendingList;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab598497fd3a9501ac3ad96f36b0f9e2';\nconst LNG = 'language=en-US';\n\nexport const getTrendingFilmsToday = () => {\n  const data = axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&${LNG}`\n  );\n  return data;\n};\n\nexport const getMovieForId = id => {\n  const data = axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&${LNG}`);\n  return data;\n};\n\nexport const getActorsForMovie = id => {\n  const data = axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&${LNG}`\n  );\n  return data;\n};\n\nexport const getReviewsForMovie = id => {\n  const data = axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&${LNG}`\n  );\n  return data;\n};\n\nexport const getMoviesBySearchTerm = value => {\n  const data = axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      query: value,\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n","import { useRef } from 'react';\n\nconst SearchBar = ({ onSubmit }) => {\n  const inputRef = useRef();\n  const hendleSubmit = e => {\n    e.preventDefault();\n    const term = inputRef.current.value;\n    onSubmit(term);\n  };\n  return (\n    <form onSubmit={hendleSubmit}>\n      <input name=\"search\" type=\"text\" ref={inputRef} required />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\nexport default SearchBar;\n","import SearchBar from 'components/MovieSearchBar/MovieSearchBar';\nimport { getMoviesBySearchTerm } from 'helpers/API';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport TrendingList from 'components/TrendingList/TrendingList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [err, setErr] = useState(null);\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) return;\n\n    const getFilms = async value => {\n      try {\n        setIsLoading(true);\n        const {\n          data: { results },\n        } = await getMoviesBySearchTerm(value);\n        setFilms(results);\n      } catch (error) {\n        setErr(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getFilms(query);\n  }, [query]);\n\n  const onSubmit = term => {\n    setSearchParams({\n      query: term,\n    });\n  };\n\n  return (\n    <div>\n      {isLoading ? <Loader /> : null}\n      {err ? <p>{err}</p> : null}\n      <SearchBar onSubmit={onSubmit} />\n      {Array.isArray(films) && (\n        <TrendingList location={location} films={films} />\n      )}\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["films","location","sx","flexGrow","container","spacing","xs","md","map","i","lg","sm","Link","state","from","to","id","maxWidth","component","height","image","poster_path","alt","title","gutterBottom","variant","color","overview","BASE_URL","API_KEY","LNG","getTrendingFilmsToday","axios","getMovieForId","getActorsForMovie","getReviewsForMovie","getMoviesBySearchTerm","value","params","query","api_key","onSubmit","inputRef","useRef","e","preventDefault","term","current","name","type","ref","required","useSearchParams","searchParams","setSearchParams","useState","setFilms","isLoading","setIsLoading","err","setErr","get","useLocation","useEffect","getFilms","results","data","message","Loader","Array","isArray","TrendingList"],"sourceRoot":""}