{"version":3,"file":"static/js/842.6e336f7a.chunk.js","mappings":"6WAEMA,EAAW,+BACXC,EAAU,mCACVC,EAAM,iBAECC,EAAwB,WAInC,OAHaC,EAAAA,EAAAA,IAAA,UACRJ,EADQ,uCAC+BC,EAD/B,YAC0CC,GAGxD,EAEYG,EAAgB,SAAAC,GAE3B,OADaF,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,kBAA+BM,EAA/B,oBAA6CL,EAA7C,YAAwDC,GAEtE,EAEYK,EAAoB,SAAAD,GAI/B,OAHaF,EAAAA,EAAAA,IAAA,UACRJ,EADQ,kBACUM,EADV,4BACgCL,EADhC,YAC2CC,GAGzD,EAEYM,EAAqB,SAAAF,GAIhC,OAHaF,EAAAA,EAAAA,IAAA,UACRJ,EADQ,kBACUM,EADV,4BACgCL,EADhC,YAC2CC,GAGzD,EAEYO,EAAwB,SAAAC,GAOnC,OANaN,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAAsC,CACjDW,OAAQ,CACNC,MAAOF,EACPG,QAASZ,IAId,C,yHCvCD,EAAyB,4BAAzB,EAA0D,wBAA1D,EAAsF,uB,SCUtF,EARoB,SAAC,GAAsB,IAApBa,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC7B,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBAAID,UAAWC,EAAf,UAAuB,mBAAiBH,MACxC,cAAGE,UAAWC,EAAd,SAAsBF,MAG3B,ECPOP,EAAuBU,EAAQ,MAA/BV,mBACR,EAAgCU,EAAQ,MAAhCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SACXC,EAAcH,EAAQ,MAAtBG,UAkCR,EAhCgB,WACd,MAA8BD,EAAS,IAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAkCH,GAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAsBL,EAAS,MAA/B,eAAOM,EAAP,KAAYC,EAAZ,KACQrB,EAAOe,IAAPf,GAiBR,OAfAa,GAAU,WACR,IAAMS,EAAU,mCAAG,WAAMtB,GAAN,yFAEfmB,GAAa,GAFE,SAGQjB,EAAmBF,GAH3B,OAGTuB,EAHS,OAIPC,EAAYD,EAASE,KAArBD,QACRP,EAAWO,GALI,gDAOfH,EAAO,KAAMK,SAPE,yBASfP,GAAa,GATE,4EAAH,sDAYhBG,EAAWtB,EACZ,GAAE,CAACA,KAEF,+BACGgB,EAAQW,KAAI,gBAAGnB,EAAH,EAAGA,OAAQoB,EAAX,EAAWA,QAAX,OACX,SAAC,EAAD,CAAiCpB,OAAQA,EAAQC,KAAMmB,GAArCC,KAAKC,SADZ,IAGZZ,GAAY,SAACa,EAAA,EAAD,IAAa,KACzBX,GAAM,uBAAIA,IAAW,OAG3B,C","sources":["helpers/API.js","webpack://goit-react-hw-05-movies/./src/components/ReviewsList/ReviewsList.module.css?071b","components/ReviewsList/ReviewsList.jsx","pages/Review/Review.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab598497fd3a9501ac3ad96f36b0f9e2';\nconst LNG = 'language=en-US';\n\nexport const getTrendingFilmsToday = () => {\n  const data = axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&${LNG}`\n  );\n  return data;\n};\n\nexport const getMovieForId = id => {\n  const data = axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&${LNG}`);\n  return data;\n};\n\nexport const getActorsForMovie = id => {\n  const data = axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&${LNG}`\n  );\n  return data;\n};\n\nexport const getReviewsForMovie = id => {\n  const data = axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&${LNG}`\n  );\n  return data;\n};\n\nexport const getMoviesBySearchTerm = value => {\n  const data = axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      query: value,\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"review\":\"ReviewsList_review__s-q1A\",\"h2\":\"ReviewsList_h2__rNnvG\",\"p\":\"ReviewsList_p__Dw+i-\"};","import css from './ReviewsList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ReviewsList = ({ author, text }) => {\n  return (\n    <div className={css.review}>\n      <h2 className={css.h2}>Review author : {author}</h2>\n      <p className={css.p}>{text}</p>\n    </div>\n  );\n};\nexport default ReviewsList;\n\nReviewsList.propTypes = {\n  author: PropTypes.string,\n  text: PropTypes.string,\n};\n","import Loader from 'components/Loader/Loader';\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\n\nconst { getReviewsForMovie } = require('helpers/API');\nconst { useEffect, useState } = require('react');\nconst { useParams } = require('react-router-dom');\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [err, setErr] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getReviews = async id => {\n      try {\n        setIsLoading(true);\n        const response = await getReviewsForMovie(id);\n        const { results } = response.data;\n        setReviews(results);\n      } catch (error) {\n        setErr(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviews(id);\n  }, [id]);\n  return (\n    <section>\n      {reviews.map(({ author, content }) => (\n        <ReviewsList key={Math.random()} author={author} text={content} />\n      ))}\n      {isLoading ? <Loader /> : null}\n      {err ? <p>{err}</p> : null}\n    </section>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","LNG","getTrendingFilmsToday","axios","getMovieForId","id","getActorsForMovie","getReviewsForMovie","getMoviesBySearchTerm","value","params","query","api_key","author","text","className","css","require","useEffect","useState","useParams","reviews","setReviews","isLoading","setIsLoading","err","setErr","getReviews","response","results","data","message","map","content","Math","random","Loader"],"sourceRoot":""}