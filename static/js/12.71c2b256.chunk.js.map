{"version":3,"file":"static/js/12.71c2b256.chunk.js","mappings":"4WAEMA,EAAW,+BACXC,EAAU,mCACVC,EAAM,iBAECC,EAAwB,WAInC,OAHaC,EAAAA,EAAAA,IAAA,UACRJ,EADQ,uCAC+BC,EAD/B,YAC0CC,GAGxD,EAEYG,EAAgB,SAAAC,GAE3B,OADaF,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,kBAA+BM,EAA/B,oBAA6CL,EAA7C,YAAwDC,GAEtE,EAEYK,EAAoB,SAAAD,GAI/B,OAHaF,EAAAA,EAAAA,IAAA,UACRJ,EADQ,kBACUM,EADV,4BACgCL,EADhC,YAC2CC,GAGzD,EAEYM,EAAqB,SAAAF,GAIhC,OAHaF,EAAAA,EAAAA,IAAA,UACRJ,EADQ,kBACUM,EADV,4BACgCL,EADhC,YAC2CC,GAGzD,EAEYO,EAAwB,SAAAC,GAOnC,OANaN,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAAsC,CACjDW,OAAQ,CACNC,MAAOF,EACPG,QAASZ,IAId,C,+GCvCD,EAAqB,qBAArB,EAAgD,sBAAhD,EAA4E,sBAA5E,EAAuG,qBAAvG,EAAgI,oB,SCiBhI,EAfiB,SAAC,GAAiC,IAA/Ba,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACnC,OACE,gBAAIC,UAAWC,EAAf,WACE,iBAAKD,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXC,IAAG,0CAAqCH,GACxCI,IAAI,MAEN,eAAIH,UAAWC,EAAf,SAAwBH,QAE1B,cAAGE,UAAWC,EAAd,SAAsBJ,MAG3B,E,wCC0BD,EArCa,WACX,OAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAsBJ,EAAAA,EAAAA,UAAS,MAA/B,eAAOK,EAAP,KAAYC,EAAZ,KACQrB,GAAOsB,EAAAA,EAAAA,MAAPtB,GAiBR,OAfAuB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMxB,GAAN,yFAEdmB,GAAa,GAFC,UAGSlB,EAAAA,EAAAA,mBAAkBD,GAH3B,OAGRyB,EAHQ,OAINT,EAASS,EAASC,KAAlBV,KACRC,EAAQD,GALM,gDAOdK,EAAO,KAAMM,SAPC,yBASdR,GAAa,GATC,4EAAH,sDAYfK,EAAUxB,EACX,GAAE,CAACA,KAEF,0BACGkB,GAAY,SAACU,EAAA,EAAD,IAAa,KACzBR,GAAM,uBAAIA,IAAW,KACrBJ,EAAKa,KAAI,gBAAGrB,EAAH,EAAGA,UAAWsB,EAAd,EAAcA,cAAeC,EAA7B,EAA6BA,aAAc/B,EAA3C,EAA2CA,GAA3C,OACR,SAAC,EAAD,CAEEQ,UAAWA,EACXC,KAAMqB,EACNpB,OAAQqB,GAHH/B,EAFC,MAUf,C","sources":["helpers/API.js","webpack://goit-react-hw-05-movies/./src/components/CastList/CastList.module.css?59ac","components/CastList/CastList.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab598497fd3a9501ac3ad96f36b0f9e2';\nconst LNG = 'language=en-US';\n\nexport const getTrendingFilmsToday = () => {\n  const data = axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&${LNG}`\n  );\n  return data;\n};\n\nexport const getMovieForId = id => {\n  const data = axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&${LNG}`);\n  return data;\n};\n\nexport const getActorsForMovie = id => {\n  const data = axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&${LNG}`\n  );\n  return data;\n};\n\nexport const getReviewsForMovie = id => {\n  const data = axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&${LNG}`\n  );\n  return data;\n};\n\nexport const getMoviesBySearchTerm = value => {\n  const data = axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      query: value,\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"CastList_li__8jMqu\",\"div\":\"CastList_div__dOkkD\",\"img\":\"CastList_img__53y+T\",\"h2\":\"CastList_h2__iVAKu\",\"p\":\"CastList_p__-btrR\"};","import css from './CastList.module.css';\nimport PropTypes from 'prop-types';\n\nconst CastList = ({ character, name, avatar }) => {\n  return (\n    <li className={css.li}>\n      <div className={css.div}>\n        <img\n          className={css.img}\n          src={`https://image.tmdb.org/t/p/w200/${avatar}`}\n          alt=\"\"\n        />\n        <h2 className={css.h2}>{name}</h2>\n      </div>\n      <p className={css.p}>{character}</p>\n    </li>\n  );\n};\nexport default CastList;\n\nCastList.propTypes = {\n  character: PropTypes.string,\n  name: PropTypes.string,\n  avatar: PropTypes.string,\n};\n","import CastList from 'components/CastList/CastList';\nimport Loader from 'components/Loader/Loader';\nimport { getActorsForMovie } from 'helpers/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [err, setErr] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getActors = async id => {\n      try {\n        setIsLoading(true);\n        const response = await getActorsForMovie(id);\n        const { cast } = response.data;\n        setCast(cast);\n      } catch (error) {\n        setErr(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getActors(id);\n  }, [id]);\n  return (\n    <ul>\n      {isLoading ? <Loader /> : null}\n      {err ? <p>{err}</p> : null}\n      {cast.map(({ character, original_name, profile_path, id }) => (\n        <CastList\n          key={id}\n          character={character}\n          name={original_name}\n          avatar={profile_path}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","LNG","getTrendingFilmsToday","axios","getMovieForId","id","getActorsForMovie","getReviewsForMovie","getMoviesBySearchTerm","value","params","query","api_key","character","name","avatar","className","css","src","alt","useState","cast","setCast","isLoading","setIsLoading","err","setErr","useParams","useEffect","getActors","response","data","message","Loader","map","original_name","profile_path"],"sourceRoot":""}