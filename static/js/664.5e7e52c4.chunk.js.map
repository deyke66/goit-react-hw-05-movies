{"version":3,"file":"static/js/664.5e7e52c4.chunk.js","mappings":"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","sources":["helpers/API.js","pages/MoviesDetails/MoviesDetail.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab598497fd3a9501ac3ad96f36b0f9e2';\nconst LNG = 'language=en-US';\n\nexport const getTrendingFilmsToday = () => {\n  const data = axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&${LNG}`\n  );\n  return data;\n};\n\nexport const getMovieForId = id => {\n  const data = axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&${LNG}`);\n  return data;\n};\n\nexport const getActorsForMovie = id => {\n  const data = axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&${LNG}`\n  );\n  return data;\n};\n\nexport const getReviewsForMovie = id => {\n  const data = axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&${LNG}`\n  );\n  return data;\n};\n\nexport const getMoviesBySearchTerm = value => {\n  const data = axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      query: value,\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n","import Loader from 'components/Loader/Loader';\nimport { getMovieForId } from 'helpers/API';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [title, setTitle] = useState('');\n  const [poster, setPoster] = useState('');\n  const [releaseData, setReleaseData] = useState('');\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [rating, setRating] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [err, setErr] = useState(null);\n\n  const location = useLocation();\n  const locationRef = useRef(location.state?.from); // location.state && location.state.from\n  useEffect(() => {\n    const getFilm = async id => {\n      try {\n        setIsLoading(true);\n        const response = await getMovieForId(id);\n        const {\n          release_date,\n          poster_path,\n          vote_average,\n          overview,\n          genres,\n          original_title,\n        } = response.data;\n        setTitle(original_title);\n        setPoster(poster_path);\n        setReleaseData(release_date);\n        setOverview(overview);\n        setGenres([...genres]);\n        setRating(vote_average);\n      } catch (error) {\n        setErr(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getFilm(id);\n  }, [id]);\n  return (\n    <main>\n      <section>\n        <Link to={locationRef.current ?? '/'}>Go Back</Link>\n        <img src={`https://image.tmdb.org/t/p/w500/${poster}`} alt=\"\" />\n        <h2>{`${title} ${releaseData}`}</h2>\n        <p>{`Rating: ${rating.toFixed(2)}`}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        {genres.map(i => (\n          <p key={i.id}>{i.name}</p>\n        ))}\n      </section>\n      <section>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </section>\n      {isLoading ? <Loader /> : null}\n      {err ? <p>{err}</p> : null}\n    </main>\n  );\n};\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","LNG","getTrendingFilmsToday","axios","getMovieForId","id","getActorsForMovie","getReviewsForMovie","getMoviesBySearchTerm","value","params","query","api_key","useParams","useState","title","setTitle","poster","setPoster","releaseData","setReleaseData","overview","setOverview","genres","setGenres","rating","setRating","isLoading","setIsLoading","err","setErr","location","useLocation","locationRef","useRef","state","from","useEffect","getFilm","response","data","release_date","poster_path","vote_average","original_title","message","Link","to","current","src","alt","toFixed","map","i","name"],"sourceRoot":""}